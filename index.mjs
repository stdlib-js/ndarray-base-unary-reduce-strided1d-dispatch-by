// Copyright (c) 2025 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@v0.2.1-esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-property@v0.2.2-esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-ndarray-like@v0.2.2-esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-object@v0.2.2-esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-function@v0.2.2-esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-collection@v0.2.2-esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-empty-collection@v0.2.2-esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-function-array@v0.2.2-esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-assert-is-data-type@v0.2.2-esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-assert-is-output-data-type-policy@esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-assert-is-input-casting-policy@esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/array-base-assert-contains@v0.2.2-esm/index.mjs";import h from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-unary-reduce-strided1d-by@esm/index.mjs";import y from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-unary-output-dtype@v0.2.2-esm/index.mjs";import u from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-unary-input-casting-dtype@esm/index.mjs";import f from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-dtype-resolve-enum@v0.2.2-esm/index.mjs";import j from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-dtypes2enums@esm/index.mjs";import c from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-spread-dimensions@esm/index.mjs";import b from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-shape@v0.2.2-esm/index.mjs";import g from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-ndims@v0.2.2-esm/index.mjs";import v from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-dtype@v0.2.2-esm/index.mjs";import w from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-order@v0.2.2-esm/index.mjs";import x from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-assign@v0.1.1-esm/index.mjs";import E from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-empty@v0.3.0-esm/index.mjs";import T from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-empty@v0.3.0-esm/index.mjs";import _ from"https://cdn.jsdelivr.net/gh/stdlib-js/array-base-indices-complement@esm/index.mjs";import k from"https://cdn.jsdelivr.net/gh/stdlib-js/array-base-take-indexed@v0.2.2-esm/index.mjs";import F from"https://cdn.jsdelivr.net/gh/stdlib-js/array-base-zero-to@v0.2.1-esm/index.mjs";import V from"https://cdn.jsdelivr.net/gh/stdlib-js/array-base-join@v0.1.1-esm/index.mjs";import A from"https://cdn.jsdelivr.net/gh/stdlib-js/array-base-copy@v0.2.2-esm/index.mjs";import D from"https://cdn.jsdelivr.net/gh/stdlib-js/array-base-insert-at@esm/index.mjs";import O from"https://cdn.jsdelivr.net/gh/stdlib-js/array-base-every-by@v0.2.2-esm/index.mjs";import S from"https://cdn.jsdelivr.net/gh/stdlib-js/object-assign@v0.2.2-esm/index.mjs";import z from"https://cdn.jsdelivr.net/gh/stdlib-js/error-tools-fmtprodmsg@v0.2.2-esm/index.mjs";import q from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@v0.2.2-esm/index.mjs";import L from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@v0.2.2-esm/index.mjs";import{isPrimitive as R}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-boolean@v0.2.2-esm/index.mjs";import{primitives as B}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-integer-array@v0.2.2-esm/index.mjs";import C from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-to-unique-normalized-indices@esm/index.mjs";var G={dims:null,keepdims:!1};function H(e,t,s,r){var i;if(!q(r))return new TypeError(z("null2V",r));if(L(r,"keepdims")&&(e.keepdims=r.keepdims,!R(e.keepdims)))return new TypeError(z("null2o","keepdims",e.keepdims));if(L(r,"dims")){if(e.dims=r.dims,!B(e.dims)&&!d(e.dims))return new TypeError(z("invalid option. `%s` option must be an array of integers. Option: `%s`.","dims",e.dims));if(null===(i=C(e.dims,t-1)))return new RangeError(z("invalid option. `%s` option contains an out-of-bounds dimension index. Option: [%s].","dims",V(e.dims,",")));if(i.length!==e.dims.length)return new Error(z("invalid option. `%s` option contains duplicate indices. Option: [%s].","dims",V(e.dims,",")));e.dims=i}return L(r,"dtype")&&(e.dtype=r.dtype,!l(s,e.dtype))?new TypeError(z("null4S","dtype",V(s,'", "'),e.dtype)):null}function I(e,t,s,r,i,n,d,a,o){var m,p,l,h;for(m=n,l=0;l<e;l++){for(p=o,h=0;h<t&&s[m+h*i]===d[p];h++)p+=a;if(h===t)return l;m+=r}return-1}function J(e,s,l,h){var y,u;if(!(this instanceof J))return new J(e,s,l,h);if(!r(e))throw new TypeError(z("null3L",e));if(!i(e.default))throw new TypeError(z('invalid argument. First argument must be an object having a "default" property and an associated method.'));if(t(e,"types")&&!n(e.types)&&!d(e.types))throw new TypeError(z('invalid argument. First argument must be an object having a "types" property whose associated value is an array-like object.'));if(t(e,"fcns")&&!a(e.fcns)&&!d(e.fcns))throw new TypeError(z('invalid argument. First argument must be an object having a "fcns" property whose associated value is an array-like object containing functions.'));if(!n(s))throw new TypeError(z("null2y",s));for(u=0;u<s.length;u++)if(y=s[u],!n(y)||y.length<1||!O(y,o))throw new TypeError(z("invalid argument. Second argument must contain arrays of data types. Value: `%s`.",s));if(!n(l)||l.length<1||!O(l,o))throw new TypeError(z("invalid argument. Third argument must be an array of data types. Value: `%s`.",l));if(!r(h))throw new TypeError(z("null43",h));if(!m(h.output))throw new TypeError(z("invalid argument. Fourth argument must be an object having a supported output data type policy. Value: `%s`.",h.output));if(!p(h.casting))throw new TypeError(z("invalid argument. Fourth argument must be an object having a supported casting policy. Value: `%s`.",h.casting));if(this._table={default:e.default,types:e.types?j(e.types):[],fcns:e.fcns?A(e.fcns):[]},this._table.types.length!==this._table.fcns.length)throw new Error("invalid argument. First argument specifies an unexpected number of types. An input ndarray data type must be specified for each provided strided function.");return this._idtypes=s,this._odtypes=l,this._policies={output:h.output,casting:h.casting},this}e(J.prototype,"apply",(function(e){var t,r,n,d,a,o,m,p,j,g,A,O,q,L,R,B,C,J,K,M,N;if(d=arguments.length,!s(e))throw new TypeError(z("null5t",e));if(L=v(e),!l(this._idtypes[0],L))throw new TypeError(z('invalid argument. First argument must have one of the following data types: "%s". Data type: `%s`.',V(this._idtypes[0],'", "'),L));for(o=[e],N=1;N<d&&s(O=arguments[N]);N++){if(C=v(O),!l(this._idtypes[N],C))throw new TypeError(z('invalid argument. Argument %d must have one of the following data types: "%s". Data type: `%s`.',N,V(this._idtypes[N],'", "'),C));o.push(O)}if(N<d-3)throw new TypeError(z("invalid argument. Argument %d must be an ndarray-like object. Value: `%s`.",N,arguments[N]));if(N===d)throw new TypeError(z("null2b",arguments[d-1]));if(N===d-3){if(B=!0,r=arguments[d-3],!i(a=arguments[d-2]))throw new TypeError(z("null2b",a));t=arguments[d-1]}else if(N===d-1){if(!i(a=arguments[d-1]))throw new TypeError(z("null2b",a))}else if(i(arguments[d-2]))a=arguments[d-2],t=arguments[d-1];else{if(!i(arguments[d-1]))throw new TypeError(z("null2b",arguments[d-2]));B=!0,r=arguments[d-2],a=arguments[d-1]}if(K=(g=b(e)).length,m=S({},G),B&&(p=H(m,K,this._odtypes,r)))throw p;return null===m.dims&&(m.dims=F(K)),j=_(K,m.dims),A=k(g,j),R=m.dtype||y(L,this._policies.output),M=T(A,{dtype:R,order:w(e)}),L!==(C=u(L,R,this._policies.casting))&&(q=E(C,g,w(e)),x([e,q]),o[0]=q,L=C),n=[f(L)],J=(N=I(this._table.fcns.length,1,this._table.types,1,1,0,n,1,0))>=0?this._table.fcns[N]:this._table.default,h(J,D(o,1,M),m.dims,a,t),m.keepdims&&(M=c(K,M,j)),M})),e(J.prototype,"assign",(function e(t){var r,n,d,a,o,m,p,y,j,c,x,T,_,k,A,O,q;if(a=arguments.length,!s(t))throw new TypeError(z("null5t",t));if(x=v(t),!l(this._idtypes[0],x))throw new TypeError(z('invalid argument. First argument must have one of the following data types: "%s". Data type: `%s`.',V(this._idtypes[0],'", "'),x));for(p=[t],q=1;q<a&&s(y=arguments[q]);q++)p.push(y);if(q<2)throw new TypeError(z("invalid argument. Second argument must be an ndarray-like object. Value: `%s`.",arguments[1]));if(q===a)throw new TypeError(z("null2b",arguments[a-1]));if(q===a-3){if(c=!0,n=arguments[a-3],!i(o=arguments[a-2]))throw new TypeError(z("null2b",o));r=arguments[a-1]}else if(q===a-1){if(!i(o=arguments[a-1]))throw new TypeError(z("null2b",o))}else if(i(arguments[a-2]))o=arguments[a-2],r=arguments[a-1];else{if(!i(arguments[a-1]))throw new TypeError(z("null2b",arguments[a-2]));c=!0,n=arguments[a-2],o=arguments[a-1]}for(O=p.pop(),q=1;q<p.length;q++)if(_=v(p[q]),!l(this._idtypes[q],_))throw new TypeError(z('invalid argument. Argument %d must have one of the following data types: "%s". Data type: `%s`.',q,V(this._idtypes[q],'", "'),_));if(k=g(t),m=S({},G),c&&(j=H(m,k,this._odtypes,n)))throw j;return null===m.dims&&(m.dims=F(k)),x!==(_=u(x,v(O),this._policies.casting))&&(e([t,T=E(_,b(t),w(t))]),p[0]=T,x=_),d=[f(x)],A=(q=I(this._table.fcns.length,1,this._table.types,1,1,0,d,1,0))>=0?this._table.fcns[q]:this._table.default,h(A,D(p,1,O),m.dims,o,r),O}));export{J as default};
//# sourceMappingURL=index.mjs.map
