"use strict";var V=function(r,t){return function(){return t||r((t={exports:{}}).exports,t),t.exports}};var R=V(function(Cr,sr){sr.exports={dims:null,keepdims:!1}});var N=V(function(Fr,z){"use strict";var ur=require("@stdlib/assert-is-plain-object"),S=require("@stdlib/assert-has-own-property"),or=require("@stdlib/assert-is-boolean").isPrimitive,mr=require("@stdlib/assert-is-integer-array").primitives,lr=require("@stdlib/assert-is-empty-collection"),dr=require("@stdlib/ndarray-base-to-unique-normalized-indices"),I=require("@stdlib/array-base-join"),vr=require("@stdlib/array-base-assert-contains"),T=require("@stdlib/string-format");function gr(r,t,i,a){var u;if(!ur(a))return new TypeError(T("invalid argument. Options argument must be an object. Value: `%s`.",a));if(S(a,"keepdims")&&(r.keepdims=a.keepdims,!or(r.keepdims)))return new TypeError(T("invalid option. `%s` option must be a boolean. Option: `%s`.","keepdims",r.keepdims));if(S(a,"dims")){if(r.dims=a.dims,!mr(r.dims)&&!lr(r.dims))return new TypeError(T("invalid option. `%s` option must be an array of integers. Option: `%s`.","dims",r.dims));if(u=dr(r.dims,t-1),u===null)return new RangeError(T("invalid option. `%s` option contains an out-of-bounds dimension index. Option: [%s].","dims",I(r.dims,",")));if(u.length!==r.dims.length)return new Error(T("invalid option. `%s` option contains duplicate indices. Option: [%s].","dims",I(r.dims,",")));r.dims=u}return S(a,"dtype")&&(r.dtype=a.dtype,!vr(i,r.dtype))?new TypeError(T('invalid option. `%s` option must be one of the following: "%s". Option: `%s`.',"dtype",I(i,'", "'),r.dtype)):null}z.exports=gr});var U=V(function(Dr,L){"use strict";function pr(r,t,i,a,u,e,o,g,m){var f,y,v,l;for(f=e,v=0;v<r;v++){for(y=m,l=0;l<t&&i[f+l*u]===o[y];l++)y+=g;if(l===t)return v;f+=a}return-1}L.exports=pr});var nr=V(function(Ar,ir){"use strict";var Q=require("@stdlib/utils-define-nonenumerable-read-only-property"),x=require("@stdlib/assert-has-property"),C=require("@stdlib/assert-is-ndarray-like"),G=require("@stdlib/assert-is-object"),c=require("@stdlib/assert-is-function"),O=require("@stdlib/assert-is-collection"),H=require("@stdlib/assert-is-empty-collection"),fr=require("@stdlib/assert-is-function-array"),J=require("@stdlib/ndarray-base-assert-is-data-type"),yr=require("@stdlib/ndarray-base-assert-is-output-data-type-policy"),hr=require("@stdlib/ndarray-base-assert-is-input-casting-policy"),F=require("@stdlib/array-base-assert-contains"),W=require("@stdlib/ndarray-base-unary-reduce-strided1d-by"),cr=require("@stdlib/ndarray-base-unary-output-dtype"),X=require("@stdlib/ndarray-base-unary-input-casting-dtype"),B=require("@stdlib/ndarray-base-dtype-resolve-enum"),wr=require("@stdlib/ndarray-base-spread-dimensions"),Y=require("@stdlib/ndarray-shape"),br=require("@stdlib/ndarray-ndims"),_=require("@stdlib/ndarray-base-dtype"),P=require("@stdlib/ndarray-base-order"),qr=require("@stdlib/ndarray-base-assign"),Z=require("@stdlib/ndarray-base-empty"),Tr=require("@stdlib/ndarray-empty"),Er=require("@stdlib/array-base-indices-complement"),kr=require("@stdlib/array-base-take-indexed"),$=require("@stdlib/array-base-zero-to"),D=require("@stdlib/array-base-join"),_r=require("@stdlib/array-base-copy"),K=require("@stdlib/array-base-every-by"),M=require("@stdlib/object-assign"),s=require("@stdlib/string-format"),rr=R(),er=N(),tr=U();function jr(r){var t,i;for(t=[],i=0;i<r.length;i++)t.push(B(r[i]));return t}function ar(r,t){var i,a,u;for(i=[],a=0,u=0;a<=r.length;a++)a===1?i.push(t):(i.push(r[u]),u+=1);return i}function j(r,t,i,a){var u,e;if(!(this instanceof j))return new j(r,t,i,a);if(!G(r))throw new TypeError(s("invalid argument. First argument must be an object. Value: `%s`.",r));if(!c(r.default))throw new TypeError(s('invalid argument. First argument must be an object having a "default" property and an associated method.'));if(x(r,"types")&&!O(r.types)&&!H(r.types))throw new TypeError(s('invalid argument. First argument must be an object having a "types" property whose associated value is an array-like object.'));if(x(r,"fcns")&&!fr(r.fcns)&&!H(r.fcns))throw new TypeError(s('invalid argument. First argument must be an object having a "fcns" property whose associated value is an array-like object containing functions.'));if(!O(t))throw new TypeError(s("invalid argument. Second argument must be an array-like object. Value: `%s`.",t));for(e=0;e<t.length;e++)if(u=t[e],!O(u)||u.length<1||!K(u,J))throw new TypeError(s("invalid argument. Second argument must contain arrays of data types. Value: `%s`.",t));if(!O(i)||i.length<1||!K(i,J))throw new TypeError(s("invalid argument. Third argument must be an array of data types. Value: `%s`.",i));if(!G(a))throw new TypeError(s("invalid argument. Fourth argument must be an object. Value: `%s`.",a));if(!yr(a.output))throw new TypeError(s("invalid argument. Fourth argument must be an object having a supported output data type policy. Value: `%s`.",a.output));if(!hr(a.casting))throw new TypeError(s("invalid argument. Fourth argument must be an object having a supported casting policy. Value: `%s`.",a.casting));if(this._table={default:r.default,types:r.types?jr(r.types):[],fcns:r.fcns?_r(r.fcns):[]},this._table.types.length!==this._table.fcns.length)throw new Error("invalid argument. First argument specifies an unexpected number of types. An input ndarray data type must be specified for each provided strided function.");return this._idtypes=t,this._odtypes=i,this._policies={output:a.output,casting:a.casting},this}Q(j.prototype,"apply",function(t){var i,a,u,e,o,g,m,f,y,v,l,w,h,p,q,b,n,A,E,k,d;if(e=arguments.length,!C(t))throw new TypeError(s("invalid argument. First argument must be an ndarray-like object. Value: `%s`.",t));if(p=_(t),!F(this._idtypes[0],p))throw new TypeError(s('invalid argument. First argument must have one of the following data types: "%s". Data type: `%s`.',D(this._idtypes[0],'", "'),p));for(g=[t],d=1;d<e&&(w=arguments[d],!!C(w));d++){if(n=_(w),!F(this._idtypes[d],n))throw new TypeError(s('invalid argument. Argument %d must have one of the following data types: "%s". Data type: `%s`.',d,D(this._idtypes[d],'", "'),n));g.push(w)}if(d<e-3)throw new TypeError(s("invalid argument. Argument %d must be an ndarray-like object. Value: `%s`.",d,arguments[d]));if(d===e)throw new TypeError(s("invalid argument. Callback argument must be a function. Value: `%s`.",arguments[e-1]));if(d===e-3){if(b=!0,a=arguments[e-3],o=arguments[e-2],!c(o))throw new TypeError(s("invalid argument. Callback argument must be a function. Value: `%s`.",o));i=arguments[e-1]}else if(d===e-1){if(o=arguments[e-1],!c(o))throw new TypeError(s("invalid argument. Callback argument must be a function. Value: `%s`.",o))}else if(c(arguments[e-2]))o=arguments[e-2],i=arguments[e-1];else if(c(arguments[e-1]))b=!0,a=arguments[e-2],o=arguments[e-1];else throw new TypeError(s("invalid argument. Callback argument must be a function. Value: `%s`.",arguments[e-2]));if(v=Y(t),E=v.length,m=M({},rr),b&&(f=er(m,E,this._odtypes,a),f))throw f;return m.dims===null&&(m.dims=$(E)),y=Er(E,m.dims),l=kr(v,y),q=m.dtype||cr(p,this._policies.output),k=Tr(l,{dtype:q,order:P(t)}),n=X(p,q,this._policies.casting),p!==n&&(h=Z(n,v,P(t)),qr([t,h]),g[0]=h,p=n),u=[B(p)],d=tr(this._table.fcns.length,1,this._table.types,1,1,0,u,1,0),d>=0?A=this._table.fcns[d]:A=this._table.default,W(A,ar(g,k),m.dims,o,i),m.keepdims&&(k=wr(E,k,y)),k});Q(j.prototype,"assign",function r(t){var i,a,u,e,o,g,m,f,y,v,l,w,h,p,q,b,n;if(e=arguments.length,!C(t))throw new TypeError(s("invalid argument. First argument must be an ndarray-like object. Value: `%s`.",t));if(l=_(t),!F(this._idtypes[0],l))throw new TypeError(s('invalid argument. First argument must have one of the following data types: "%s". Data type: `%s`.',D(this._idtypes[0],'", "'),l));for(m=[t],n=1;n<e&&(f=arguments[n],!!C(f));n++)m.push(f);if(n<2)throw new TypeError(s("invalid argument. Second argument must be an ndarray-like object. Value: `%s`.",arguments[1]));if(n===e)throw new TypeError(s("invalid argument. Callback argument must be a function. Value: `%s`.",arguments[e-1]));if(n===e-3){if(v=!0,a=arguments[e-3],o=arguments[e-2],!c(o))throw new TypeError(s("invalid argument. Callback argument must be a function. Value: `%s`.",o));i=arguments[e-1]}else if(n===e-1){if(o=arguments[e-1],!c(o))throw new TypeError(s("invalid argument. Callback argument must be a function. Value: `%s`.",o))}else if(c(arguments[e-2]))o=arguments[e-2],i=arguments[e-1];else if(c(arguments[e-1]))v=!0,a=arguments[e-2],o=arguments[e-1];else throw new TypeError(s("invalid argument. Callback argument must be a function. Value: `%s`.",arguments[e-2]));for(b=m.pop(),n=1;n<m.length;n++)if(h=_(m[n]),!F(this._idtypes[n],h))throw new TypeError(s('invalid argument. Argument %d must have one of the following data types: "%s". Data type: `%s`.',n,D(this._idtypes[n],'", "'),h));if(p=br(t),g=M({},rr),v&&(y=er(g,p,this._odtypes,a),y))throw y;return g.dims===null&&(g.dims=$(p)),h=X(l,_(b),this._policies.casting),l!==h&&(w=Z(h,Y(t),P(t)),r([t,w]),m[0]=w,l=h),u=[B(l)],n=tr(this._table.fcns.length,1,this._table.types,1,1,0,u,1,0),n>=0?q=this._table.fcns[n]:q=this._table.default,W(q,ar(m,b),g.dims,o,i),b});ir.exports=j});var Vr=nr();module.exports=Vr;
/**
* @license Apache-2.0
*
* Copyright (c) 2025 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
//# sourceMappingURL=index.js.map
