"use strict";var A=function(e,a){return function(){return a||e((a={exports:{}}).exports,a),a.exports}};var B=A(function(jr,ir){ir.exports={dims:null,keepdims:!1}});var z=A(function(Vr,R){"use strict";var nr=require("@stdlib/assert-is-plain-object"),S=require("@stdlib/assert-has-own-property"),sr=require("@stdlib/assert-is-boolean").isPrimitive,ur=require("@stdlib/assert-is-integer-array").primitives,or=require("@stdlib/assert-is-empty-collection"),mr=require("@stdlib/ndarray-base-to-unique-normalized-indices"),I=require("@stdlib/array-base-join"),dr=require("@stdlib/array-base-assert-contains"),E=require("@stdlib/string-format");function lr(e,a,u,t){var d;if(!nr(t))return new TypeError(E("invalid argument. Options argument must be an object. Value: `%s`.",t));if(S(t,"keepdims")&&(e.keepdims=t.keepdims,!sr(e.keepdims)))return new TypeError(E("invalid option. `%s` option must be a boolean. Option: `%s`.","keepdims",e.keepdims));if(S(t,"dims")){if(e.dims=t.dims,!ur(e.dims)&&!or(e.dims))return new TypeError(E("invalid option. `%s` option must be an array of integers. Option: `%s`.","dims",e.dims));if(d=mr(e.dims,a-1),d===null)return new RangeError(E("invalid option. `%s` option contains an out-of-bounds dimension index. Option: [%s].","dims",I(e.dims,",")));if(d.length!==e.dims.length)return new Error(E("invalid option. `%s` option contains duplicate indices. Option: [%s].","dims",I(e.dims,",")));e.dims=d}return S(t,"dtype")&&(e.dtype=t.dtype,!dr(u,e.dtype))?new TypeError(E('invalid option. `%s` option must be one of the following: "%s". Option: `%s`.',"dtype",I(u,'", "'),e.dtype)):null}R.exports=lr});var tr=A(function(Cr,ar){"use strict";var J=require("@stdlib/utils-define-nonenumerable-read-only-property"),N=require("@stdlib/assert-has-property"),C=require("@stdlib/assert-is-ndarray-like"),L=require("@stdlib/assert-is-object"),f=require("@stdlib/assert-is-function"),V=require("@stdlib/assert-is-collection"),U=require("@stdlib/assert-is-empty-collection"),vr=require("@stdlib/assert-is-function-array"),G=require("@stdlib/ndarray-base-assert-is-data-type"),gr=require("@stdlib/ndarray-base-assert-is-output-data-type-policy"),pr=require("@stdlib/ndarray-base-assert-is-input-casting-policy"),F=require("@stdlib/array-base-assert-contains"),K=require("@stdlib/ndarray-base-unary-reduce-strided1d-by"),fr=require("@stdlib/ndarray-base-unary-output-dtype"),M=require("@stdlib/ndarray-base-unary-input-casting-dtype"),Q=require("@stdlib/ndarray-base-dtype-resolve-enum"),yr=require("@stdlib/ndarray-base-dtypes2enums"),hr=require("@stdlib/ndarray-base-spread-dimensions"),W=require("@stdlib/ndarray-shape"),cr=require("@stdlib/ndarray-ndims"),_=require("@stdlib/ndarray-base-dtype"),P=require("@stdlib/ndarray-base-order"),wr=require("@stdlib/ndarray-base-assign"),X=require("@stdlib/ndarray-base-empty"),br=require("@stdlib/ndarray-empty"),qr=require("@stdlib/array-base-indices-complement"),Er=require("@stdlib/array-base-take-indexed"),Y=require("@stdlib/array-base-zero-to"),O=require("@stdlib/array-base-join"),Tr=require("@stdlib/array-base-copy"),Z=require("@stdlib/array-base-insert-at"),H=require("@stdlib/array-base-every-by"),$=require("@stdlib/blas-ext-base-gindex-of-row").ndarray,x=require("@stdlib/object-assign"),n=require("@stdlib/string-format"),rr=B(),er=z();function j(e,a,u,t){var d,r;if(!(this instanceof j))return new j(e,a,u,t);if(!L(e))throw new TypeError(n("invalid argument. First argument must be an object. Value: `%s`.",e));if(!f(e.default))throw new TypeError(n('invalid argument. First argument must be an object having a "default" property and an associated method.'));if(N(e,"types")&&!V(e.types)&&!U(e.types))throw new TypeError(n('invalid argument. First argument must be an object having a "types" property whose associated value is an array-like object.'));if(N(e,"fcns")&&!vr(e.fcns)&&!U(e.fcns))throw new TypeError(n('invalid argument. First argument must be an object having a "fcns" property whose associated value is an array-like object containing functions.'));if(!V(a))throw new TypeError(n("invalid argument. Second argument must be an array-like object. Value: `%s`.",a));for(r=0;r<a.length;r++)if(d=a[r],!V(d)||d.length<1||!H(d,G))throw new TypeError(n("invalid argument. Second argument must contain arrays of data types. Value: `%s`.",a));if(!V(u)||u.length<1||!H(u,G))throw new TypeError(n("invalid argument. Third argument must be an array of data types. Value: `%s`.",u));if(!L(t))throw new TypeError(n("invalid argument. Fourth argument must be an object. Value: `%s`.",t));if(!gr(t.output))throw new TypeError(n("invalid argument. Fourth argument must be an object having a supported output data type policy. Value: `%s`.",t.output));if(!pr(t.casting))throw new TypeError(n("invalid argument. Fourth argument must be an object having a supported casting policy. Value: `%s`.",t.casting));if(this._table={default:e.default,types:e.types?yr(e.types):[],fcns:e.fcns?Tr(e.fcns):[]},this._table.types.length!==this._table.fcns.length)throw new Error("invalid argument. First argument specifies an unexpected number of types. An input ndarray data type must be specified for each provided strided function.");return this._idtypes=a,this._odtypes=u,this._policies={output:t.output,casting:t.casting},this}J(j.prototype,"apply",function(a){var u,t,d,r,s,g,o,w,b,y,p,h,v,l,q,c,i,D,T,k,m;if(r=arguments.length,!C(a))throw new TypeError(n("invalid argument. First argument must be an ndarray-like object. Value: `%s`.",a));if(l=_(a),!F(this._idtypes[0],l))throw new TypeError(n('invalid argument. First argument must have one of the following data types: "%s". Data type: `%s`.',O(this._idtypes[0],'", "'),l));for(g=[a],m=1;m<r&&(h=arguments[m],!!C(h));m++){if(i=_(h),!F(this._idtypes[m],i))throw new TypeError(n('invalid argument. Argument %d must have one of the following data types: "%s". Data type: `%s`.',m,O(this._idtypes[m],'", "'),i));g.push(h)}if(m<r-3)throw new TypeError(n("invalid argument. Argument %d must be an ndarray-like object. Value: `%s`.",m,arguments[m]));if(m===r)throw new TypeError(n("invalid argument. Callback argument must be a function. Value: `%s`.",arguments[r-1]));if(m===r-3){if(c=!0,t=arguments[r-3],s=arguments[r-2],!f(s))throw new TypeError(n("invalid argument. Callback argument must be a function. Value: `%s`.",s));u=arguments[r-1]}else if(m===r-1){if(s=arguments[r-1],!f(s))throw new TypeError(n("invalid argument. Callback argument must be a function. Value: `%s`.",s))}else if(f(arguments[r-2]))s=arguments[r-2],u=arguments[r-1];else if(f(arguments[r-1]))c=!0,t=arguments[r-2],s=arguments[r-1];else throw new TypeError(n("invalid argument. Callback argument must be a function. Value: `%s`.",arguments[r-2]));if(y=W(a),T=y.length,o=x({},rr),c&&(w=er(o,T,this._odtypes,t),w))throw w;return o.dims===null&&(o.dims=Y(T)),b=qr(T,o.dims),p=Er(y,b),q=o.dtype||fr(l,this._policies.output),k=br(p,{dtype:q,order:P(a)}),i=M(l,q,this._policies.casting),l!==i&&(v=X(i,y,P(a)),wr([a,v]),g[0]=v,l=i),d=[Q(l)],m=$(this._table.fcns.length,1,this._table.types,1,1,0,d,1,0),m>=0?D=this._table.fcns[m]:D=this._table.default,K(D,Z(g,1,k),o.dims,s,u),o.keepdims&&(k=hr(T,k,b)),k});J(j.prototype,"assign",function e(a){var u,t,d,r,s,g,o,w,b,y,p,h,v,l,q,c,i;if(r=arguments.length,!C(a))throw new TypeError(n("invalid argument. First argument must be an ndarray-like object. Value: `%s`.",a));if(p=_(a),!F(this._idtypes[0],p))throw new TypeError(n('invalid argument. First argument must have one of the following data types: "%s". Data type: `%s`.',O(this._idtypes[0],'", "'),p));for(o=[a],i=1;i<r&&(w=arguments[i],!!C(w));i++)o.push(w);if(i<2)throw new TypeError(n("invalid argument. Second argument must be an ndarray-like object. Value: `%s`.",arguments[1]));if(i===r)throw new TypeError(n("invalid argument. Callback argument must be a function. Value: `%s`.",arguments[r-1]));if(i===r-3){if(y=!0,t=arguments[r-3],s=arguments[r-2],!f(s))throw new TypeError(n("invalid argument. Callback argument must be a function. Value: `%s`.",s));u=arguments[r-1]}else if(i===r-1){if(s=arguments[r-1],!f(s))throw new TypeError(n("invalid argument. Callback argument must be a function. Value: `%s`.",s))}else if(f(arguments[r-2]))s=arguments[r-2],u=arguments[r-1];else if(f(arguments[r-1]))y=!0,t=arguments[r-2],s=arguments[r-1];else throw new TypeError(n("invalid argument. Callback argument must be a function. Value: `%s`.",arguments[r-2]));for(c=o.pop(),i=1;i<o.length;i++)if(v=_(o[i]),!F(this._idtypes[i],v))throw new TypeError(n('invalid argument. Argument %d must have one of the following data types: "%s". Data type: `%s`.',i,O(this._idtypes[i],'", "'),v));if(l=cr(a),g=x({},rr),y&&(b=er(g,l,this._odtypes,t),b))throw b;return g.dims===null&&(g.dims=Y(l)),v=M(p,_(c),this._policies.casting),p!==v&&(h=X(v,W(a),P(a)),e([a,h]),o[0]=h,p=v),d=[Q(p)],i=$(this._table.fcns.length,1,this._table.types,1,1,0,d,1,0),i>=0?q=this._table.fcns[i]:q=this._table.default,K(q,Z(o,1,c),g.dims,s,u),c});ar.exports=j});var kr=tr();module.exports=kr;
/**
* @license Apache-2.0
*
* Copyright (c) 2025 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
//# sourceMappingURL=index.js.map
